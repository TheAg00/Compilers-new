State 77 conflicts: 2 shift/reduce
State 78 conflicts: 2 shift/reduce
State 134 conflicts: 7 shift/reduce
State 135 conflicts: 2 shift/reduce
State 136 conflicts: 2 shift/reduce
State 137 conflicts: 2 shift/reduce
State 138 conflicts: 2 shift/reduce
State 139 conflicts: 7 shift/reduce
State 140 conflicts: 2 shift/reduce
State 190 conflicts: 2 shift/reduce
State 200 conflicts: 1 shift/reduce
State 201 conflicts: 1 shift/reduce


Grammar

    0 $accept: program "EOF"

    1 program: header declarations subprograms comp_statement "."

    2 header: "program" "IDENTIFIER" ";"

    3 declarations: constdefs typedefs vardefs

    4 constdefs: "const" constant_defs ";"
    5          | ε

    6 constant_defs: constant_defs ";" "IDENTIFIER" "=" expression
    7              | "IDENTIFIER" "=" expression

    8 expression: expression "> or >= or < or <= or <>" expression
    9           | expression "=" expression
   10           | expression "IN" expression
   11           | expression "||" expression
   12           | expression "+ or -" expression
   13           | expression "* or / or DIV or MOD or AND" expression
   14           | expression error expression
   15           | "+ or -" expression
   16           | "NOT" expression
   17           | variable
   18           | "IDENTIFIER" "(" expressions ")"
   19           | "length" "(" expression ")"
   20           | "new" "(" expression ")"
   21           | constant
   22           | "(" expression ")"
   23           | setlistexpression

   24 variable: "IDENTIFIER"
   25         | variable "." "IDENTIFIER"
   26         | variable "[" expressions "]"
   27         | "list function" "(" expression ")"
   28         | "list function" "(" expression error

   29 expressions: expressions "," expression
   30            | expression

   31 constant: "ICONST"
   32         | "RCONST"
   33         | "BCONST"
   34         | "CCONST"

   35 setlistexpression: "[" expressions "]"
   36                  | "[" "]"

   37 typedefs: "type" type_defs ";"
   38         | "type" type_defs error
   39         | ε

   40 type_defs: type_defs ";" "IDENTIFIER" "=" type_def
   41          | "IDENTIFIER" "=" type_def

   42 type_def: "array" "[" dims "]" "of" typename
   43         | "list" "of" typename
   44         | "set" "of" typename
   45         | "record" fields "end"
   46         | limit ".." limit

   47 dims: dims "," limits
   48     | limits

   49 limits: limit ".." limit
   50       | "IDENTIFIER"

   51 limit: sign "ICONST"
   52      | "CCONST"
   53      | "BCONST"
   54      | "+ or -" "IDENTIFIER"
   55      | "IDENTIFIER"

   56 sign: "+ or -"
   57     | ε

   58 typename: standard_type
   59         | "IDENTIFIER"

   60 standard_type: "integer"
   61              | "real"
   62              | "boolean"
   63              | "char"

   64 fields: fields ";" field
   65       | field

   66 field: identifiers ":" typename

   67 identifiers: identifiers "," "IDENTIFIER"
   68            | "IDENTIFIER"

   69 vardefs: "var" variable_defs ";"
   70        | ε

   71 variable_defs: variable_defs ";" identifiers ":" typename
   72              | identifiers ":" typename

   73 subprograms: subprograms subprogram ";"
   74            | ε

   75 subprogram: sub_header ";" "forward"
   76           | sub_header ";" declarations subprograms comp_statement

   77 sub_header: "function" "IDENTIFIER" formal_parameters ":" standard_type
   78           | "function" "IDENTIFIER" formal_parameters ":" "list"
   79           | "procedure" "IDENTIFIER" formal_parameters
   80           | "function" "IDENTIFIER"

   81 formal_parameters: "(" parameter_list ")"
   82                  | ε

   83 parameter_list: parameter_list ";" pass identifiers ":" typename
   84               | pass identifiers ":" typename

   85 pass: "var"
   86     | ε

   87 comp_statement: "begin" statements "end"

   88 statements: statements ";" statement
   89           | statement

   90 statement: assignment
   91          | if_statement
   92          | case_statement
   93          | while_statement
   94          | for_statement
   95          | with_statement
   96          | subprogram_call
   97          | io_statement
   98          | comp_statement
   99          | ε

  100 assignment: variable ":=" expression
  101           | variable ":=" "string"

  102 if_statement: "if" expression "then" statement if_tail
  103             | "if" expression error statement if_tail

  104 if_tail: "else" statement
  105        | ε

  106 case_statement: "case" expression "of" cases case_tail "end"

  107 cases: cases ";" single_case
  108      | single_case

  109 single_case: label_list ":" statement
  110            | ε

  111 label_list: label_list "," label
  112           | label

  113 label: sign constant
  114      | sign "IDENTIFIER"

  115 case_tail: ";" "otherwise" ":" statement
  116          | ε

  117 while_statement: "while" expression "do" statement
  118                | "while" expression error statement

  119 for_statement: "for" "IDENTIFIER" ":=" iter_space "do" statement

  120 iter_space: expression "to" expression
  121           | expression "downto" expression

  122 with_statement: "with" variable "do" statement

  123 subprogram_call: "IDENTIFIER"
  124                | "IDENTIFIER" "(" expressions ")"

  125 io_statement: "read" "(" read_list ")"
  126             | "write" "(" write_list ")"

  127 read_list: read_list "," read_item
  128          | read_item

  129 read_item: variable

  130 write_list: write_list "," write_item
  131           | write_item

  132 write_item: expression
  133           | "string"


Terminals, with rules where they appear

    "EOF" (0) 0
    error (256) 14 28 38 103 118
    "program" <str> (258) 2
    "const" <str> (259) 4
    "type" <str> (260) 37 38
    "array" <str> (261) 42
    "list" <str> (262) 43 78
    "set" <str> (263) 44
    "of" <str> (264) 42 43 44 106
    "record" <str> (265) 45
    "var" <str> (266) 69 85
    "function" <str> (267) 77 78 80
    "procedure" <str> (268) 79
    "integer" <str> (269) 60
    "real" <str> (270) 61
    "boolean" <str> (271) 62
    "char" <str> (272) 63
    "forward" <str> (273) 75
    "length" <str> (274) 19
    "new" <str> (275) 20
    "begin" <str> (276) 87
    "end" <str> (277) 45 87 106
    "if" <str> (278) 102 103
    "then" <str> (279) 102
    "else" <str> (280) 104
    "while" <str> (281) 117 118
    "do" <str> (282) 117 119 122
    "case" <str> (283) 106
    "otherwise" <str> (284) 115
    "for" <str> (285) 119
    "to" <str> (286) 120
    "downto" <str> (287) 121
    "with" <str> (288) 122
    "read" <str> (289) 125
    "write" <str> (290) 126
    "> or >= or < or <= or <>" (291) 8
    "+ or -" (292) 12 15 54 56
    "||" (293) 11
    "* or / or DIV or MOD or AND" (294) 13
    "NOT" (295) 16
    "IN" (296) 10
    "(" (297) 18 19 20 22 27 28 81 124 125 126
    ")" (298) 18 19 20 22 27 81 124 125 126
    ";" (299) 2 4 6 37 40 64 69 71 73 75 76 83 88 107 115
    "." (300) 1 25
    "," (301) 29 47 67 111 127 130
    "=" (302) 6 7 9 40 41
    ":" (303) 66 71 72 77 78 83 84 109 115
    "[" (304) 26 35 36 42
    "]" (305) 26 35 36 42
    ":=" (306) 100 101 119
    ".." (307) 46 49
    "IDENTIFIER" <str> (308) 2 6 7 18 24 25 40 41 50 54 55 59 67 68 77 78 79 80 114 119 123 124
    "ICONST" <integer> (309) 31 51
    "RCONST" <real> (310) 32
    "BCONST" <character> (311) 33 53
    "CCONST" <character> (312) 34 52
    "list function" (313) 27 28
    "string" (314) 101 133
    LOWER_THAN_ELSE (315)


Nonterminals, with rules where they appear

    $accept (61)
        on left: 0
    program <str> (62)
        on left: 1
        on right: 0
    header <str> (63)
        on left: 2
        on right: 1
    declarations <str> (64)
        on left: 3
        on right: 1 76
    constdefs <str> (65)
        on left: 4 5
        on right: 3
    constant_defs <str> (66)
        on left: 6 7
        on right: 4 6
    expression <str> (67)
        on left: 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
        on right: 6 7 8 9 10 11 12 13 14 15 16 19 20 22 27 28 29 30 100 102 103 106 117 118 120 121 132
    variable <str> (68)
        on left: 24 25 26 27 28
        on right: 17 25 26 100 101 122 129
    expressions <str> (69)
        on left: 29 30
        on right: 18 26 29 35 124
    constant <str> (70)
        on left: 31 32 33 34
        on right: 21 113
    setlistexpression <str> (71)
        on left: 35 36
        on right: 23
    typedefs <str> (72)
        on left: 37 38 39
        on right: 3
    type_defs <str> (73)
        on left: 40 41
        on right: 37 38 40
    type_def <str> (74)
        on left: 42 43 44 45 46
        on right: 40 41
    dims <str> (75)
        on left: 47 48
        on right: 42 47
    limits <str> (76)
        on left: 49 50
        on right: 47 48
    limit <str> (77)
        on left: 51 52 53 54 55
        on right: 46 49
    sign <str> (78)
        on left: 56 57
        on right: 51 113 114
    typename <str> (79)
        on left: 58 59
        on right: 42 43 44 66 71 72 83 84
    standard_type <str> (80)
        on left: 60 61 62 63
        on right: 58 77
    fields <str> (81)
        on left: 64 65
        on right: 45 64
    field <str> (82)
        on left: 66
        on right: 64 65
    identifiers <str> (83)
        on left: 67 68
        on right: 66 67 71 72 83 84
    vardefs <str> (84)
        on left: 69 70
        on right: 3
    variable_defs <str> (85)
        on left: 71 72
        on right: 69 71
    subprograms <str> (86)
        on left: 73 74
        on right: 1 73 76
    subprogram <str> (87)
        on left: 75 76
        on right: 73
    sub_header <str> (88)
        on left: 77 78 79 80
        on right: 75 76
    formal_parameters <str> (89)
        on left: 81 82
        on right: 77 78 79
    parameter_list <str> (90)
        on left: 83 84
        on right: 81 83
    pass <str> (91)
        on left: 85 86
        on right: 83 84
    comp_statement <str> (92)
        on left: 87
        on right: 1 76 98
    statements <str> (93)
        on left: 88 89
        on right: 87 88
    statement <str> (94)
        on left: 90 91 92 93 94 95 96 97 98 99
        on right: 88 89 102 103 104 109 115 117 118 119 122
    assignment <str> (95)
        on left: 100 101
        on right: 90
    if_statement <str> (96)
        on left: 102 103
        on right: 91
    if_tail <str> (97)
        on left: 104 105
        on right: 102 103
    case_statement <str> (98)
        on left: 106
        on right: 92
    cases <str> (99)
        on left: 107 108
        on right: 106 107
    single_case <str> (100)
        on left: 109 110
        on right: 107 108
    label_list <str> (101)
        on left: 111 112
        on right: 109 111
    label <str> (102)
        on left: 113 114
        on right: 111 112
    case_tail <str> (103)
        on left: 115 116
        on right: 106
    while_statement <str> (104)
        on left: 117 118
        on right: 93
    for_statement <str> (105)
        on left: 119
        on right: 94
    iter_space <str> (106)
        on left: 120 121
        on right: 119
    with_statement <str> (107)
        on left: 122
        on right: 95
    subprogram_call <str> (108)
        on left: 123 124
        on right: 96
    io_statement <str> (109)
        on left: 125 126
        on right: 97
    read_list <str> (110)
        on left: 127 128
        on right: 125 127
    read_item <str> (111)
        on left: 129
        on right: 127 128
    write_list <str> (112)
        on left: 130 131
        on right: 126 130
    write_item <str> (113)
        on left: 132 133
        on right: 130 131


State 0

    0 $accept: • program "EOF"

    "program"  shift, and go to state 1

    program  go to state 2
    header   go to state 3


State 1

    2 header: "program" • "IDENTIFIER" ";"

    "IDENTIFIER"  shift, and go to state 4


State 2

    0 $accept: program • "EOF"

    "EOF"  shift, and go to state 5


State 3

    1 program: header • declarations subprograms comp_statement "."

    "const"  shift, and go to state 6

    $default  reduce using rule 5 (constdefs)

    declarations  go to state 7
    constdefs     go to state 8


State 4

    2 header: "program" "IDENTIFIER" • ";"

    ";"  shift, and go to state 9


State 5

    0 $accept: program "EOF" •

    $default  accept


State 6

    4 constdefs: "const" • constant_defs ";"

    "IDENTIFIER"  shift, and go to state 10

    constant_defs  go to state 11


State 7

    1 program: header declarations • subprograms comp_statement "."

    $default  reduce using rule 74 (subprograms)

    subprograms  go to state 12


State 8

    3 declarations: constdefs • typedefs vardefs

    "type"  shift, and go to state 13

    $default  reduce using rule 39 (typedefs)

    typedefs  go to state 14


State 9

    2 header: "program" "IDENTIFIER" ";" •

    $default  reduce using rule 2 (header)


State 10

    7 constant_defs: "IDENTIFIER" • "=" expression

    "="  shift, and go to state 15


State 11

    4 constdefs: "const" constant_defs • ";"
    6 constant_defs: constant_defs • ";" "IDENTIFIER" "=" expression

    ";"  shift, and go to state 16


State 12

    1 program: header declarations subprograms • comp_statement "."
   73 subprograms: subprograms • subprogram ";"

    "function"   shift, and go to state 17
    "procedure"  shift, and go to state 18
    "begin"      shift, and go to state 19

    subprogram      go to state 20
    sub_header      go to state 21
    comp_statement  go to state 22


State 13

   37 typedefs: "type" • type_defs ";"
   38         | "type" • type_defs error

    "IDENTIFIER"  shift, and go to state 23

    type_defs  go to state 24


State 14

    3 declarations: constdefs typedefs • vardefs

    "var"  shift, and go to state 25

    $default  reduce using rule 70 (vardefs)

    vardefs  go to state 26


State 15

    7 constant_defs: "IDENTIFIER" "=" • expression

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 39
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 16

    4 constdefs: "const" constant_defs ";" •
    6 constant_defs: constant_defs ";" • "IDENTIFIER" "=" expression

    "IDENTIFIER"  shift, and go to state 43

    $default  reduce using rule 4 (constdefs)


State 17

   77 sub_header: "function" • "IDENTIFIER" formal_parameters ":" standard_type
   78           | "function" • "IDENTIFIER" formal_parameters ":" "list"
   80           | "function" • "IDENTIFIER"

    "IDENTIFIER"  shift, and go to state 44


State 18

   79 sub_header: "procedure" • "IDENTIFIER" formal_parameters

    "IDENTIFIER"  shift, and go to state 45


State 19

   87 comp_statement: "begin" • statements "end"

    "begin"          shift, and go to state 19
    "if"             shift, and go to state 46
    "while"          shift, and go to state 47
    "case"           shift, and go to state 48
    "for"            shift, and go to state 49
    "with"           shift, and go to state 50
    "read"           shift, and go to state 51
    "write"          shift, and go to state 52
    "IDENTIFIER"     shift, and go to state 53
    "list function"  shift, and go to state 38

    $default  reduce using rule 99 (statement)

    variable         go to state 54
    comp_statement   go to state 55
    statements       go to state 56
    statement        go to state 57
    assignment       go to state 58
    if_statement     go to state 59
    case_statement   go to state 60
    while_statement  go to state 61
    for_statement    go to state 62
    with_statement   go to state 63
    subprogram_call  go to state 64
    io_statement     go to state 65


State 20

   73 subprograms: subprograms subprogram • ";"

    ";"  shift, and go to state 66


State 21

   75 subprogram: sub_header • ";" "forward"
   76           | sub_header • ";" declarations subprograms comp_statement

    ";"  shift, and go to state 67


State 22

    1 program: header declarations subprograms comp_statement • "."

    "."  shift, and go to state 68


State 23

   41 type_defs: "IDENTIFIER" • "=" type_def

    "="  shift, and go to state 69


State 24

   37 typedefs: "type" type_defs • ";"
   38         | "type" type_defs • error
   40 type_defs: type_defs • ";" "IDENTIFIER" "=" type_def

    error  shift, and go to state 70
    ";"    shift, and go to state 71


State 25

   69 vardefs: "var" • variable_defs ";"

    "IDENTIFIER"  shift, and go to state 72

    identifiers    go to state 73
    variable_defs  go to state 74


State 26

    3 declarations: constdefs typedefs vardefs •

    $default  reduce using rule 3 (declarations)


State 27

   19 expression: "length" • "(" expression ")"

    "("  shift, and go to state 75


State 28

   20 expression: "new" • "(" expression ")"

    "("  shift, and go to state 76


State 29

   15 expression: "+ or -" • expression

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 77
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 30

   16 expression: "NOT" • expression

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 78
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 31

   22 expression: "(" • expression ")"

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 79
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 32

   35 setlistexpression: "[" • expressions "]"
   36                  | "[" • "]"

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "]"              shift, and go to state 80
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 81
    variable           go to state 40
    expressions        go to state 82
    constant           go to state 41
    setlistexpression  go to state 42


State 33

   18 expression: "IDENTIFIER" • "(" expressions ")"
   24 variable: "IDENTIFIER" •

    "("  shift, and go to state 83

    $default  reduce using rule 24 (variable)


State 34

   31 constant: "ICONST" •

    $default  reduce using rule 31 (constant)


State 35

   32 constant: "RCONST" •

    $default  reduce using rule 32 (constant)


State 36

   33 constant: "BCONST" •

    $default  reduce using rule 33 (constant)


State 37

   34 constant: "CCONST" •

    $default  reduce using rule 34 (constant)


State 38

   27 variable: "list function" • "(" expression ")"
   28         | "list function" • "(" expression error

    "("  shift, and go to state 84


State 39

    7 constant_defs: "IDENTIFIER" "=" expression •
    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression

    error                          shift, and go to state 85
    "> or >= or < or <= or <>"     shift, and go to state 86
    "+ or -"                       shift, and go to state 87
    "||"                           shift, and go to state 88
    "* or / or DIV or MOD or AND"  shift, and go to state 89
    "IN"                           shift, and go to state 90
    "="                            shift, and go to state 91

    ";"  reduce using rule 7 (constant_defs)


State 40

   17 expression: variable •
   25 variable: variable • "." "IDENTIFIER"
   26         | variable • "[" expressions "]"

    "."  shift, and go to state 92
    "["  shift, and go to state 93

    $default  reduce using rule 17 (expression)


State 41

   21 expression: constant •

    $default  reduce using rule 21 (expression)


State 42

   23 expression: setlistexpression •

    $default  reduce using rule 23 (expression)


State 43

    6 constant_defs: constant_defs ";" "IDENTIFIER" • "=" expression

    "="  shift, and go to state 94


State 44

   77 sub_header: "function" "IDENTIFIER" • formal_parameters ":" standard_type
   78           | "function" "IDENTIFIER" • formal_parameters ":" "list"
   80           | "function" "IDENTIFIER" •

    "("  shift, and go to state 95

    ":"       reduce using rule 82 (formal_parameters)
    $default  reduce using rule 80 (sub_header)

    formal_parameters  go to state 96


State 45

   79 sub_header: "procedure" "IDENTIFIER" • formal_parameters

    "("  shift, and go to state 95

    $default  reduce using rule 82 (formal_parameters)

    formal_parameters  go to state 97


State 46

  102 if_statement: "if" • expression "then" statement if_tail
  103             | "if" • expression error statement if_tail

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 98
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 47

  117 while_statement: "while" • expression "do" statement
  118                | "while" • expression error statement

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 99
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 48

  106 case_statement: "case" • expression "of" cases case_tail "end"

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 100
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 49

  119 for_statement: "for" • "IDENTIFIER" ":=" iter_space "do" statement

    "IDENTIFIER"  shift, and go to state 101


State 50

  122 with_statement: "with" • variable "do" statement

    "IDENTIFIER"     shift, and go to state 102
    "list function"  shift, and go to state 38

    variable  go to state 103


State 51

  125 io_statement: "read" • "(" read_list ")"

    "("  shift, and go to state 104


State 52

  126 io_statement: "write" • "(" write_list ")"

    "("  shift, and go to state 105


State 53

   24 variable: "IDENTIFIER" •
  123 subprogram_call: "IDENTIFIER" •
  124                | "IDENTIFIER" • "(" expressions ")"

    "("  shift, and go to state 106

    "end"     reduce using rule 123 (subprogram_call)
    "else"    reduce using rule 123 (subprogram_call)
    ";"       reduce using rule 123 (subprogram_call)
    $default  reduce using rule 24 (variable)


State 54

   25 variable: variable • "." "IDENTIFIER"
   26         | variable • "[" expressions "]"
  100 assignment: variable • ":=" expression
  101           | variable • ":=" "string"

    "."   shift, and go to state 92
    "["   shift, and go to state 93
    ":="  shift, and go to state 107


State 55

   98 statement: comp_statement •

    $default  reduce using rule 98 (statement)


State 56

   87 comp_statement: "begin" statements • "end"
   88 statements: statements • ";" statement

    "end"  shift, and go to state 108
    ";"    shift, and go to state 109


State 57

   89 statements: statement •

    $default  reduce using rule 89 (statements)


State 58

   90 statement: assignment •

    $default  reduce using rule 90 (statement)


State 59

   91 statement: if_statement •

    $default  reduce using rule 91 (statement)


State 60

   92 statement: case_statement •

    $default  reduce using rule 92 (statement)


State 61

   93 statement: while_statement •

    $default  reduce using rule 93 (statement)


State 62

   94 statement: for_statement •

    $default  reduce using rule 94 (statement)


State 63

   95 statement: with_statement •

    $default  reduce using rule 95 (statement)


State 64

   96 statement: subprogram_call •

    $default  reduce using rule 96 (statement)


State 65

   97 statement: io_statement •

    $default  reduce using rule 97 (statement)


State 66

   73 subprograms: subprograms subprogram ";" •

    $default  reduce using rule 73 (subprograms)


State 67

   75 subprogram: sub_header ";" • "forward"
   76           | sub_header ";" • declarations subprograms comp_statement

    "const"    shift, and go to state 6
    "forward"  shift, and go to state 110

    $default  reduce using rule 5 (constdefs)

    declarations  go to state 111
    constdefs     go to state 8


State 68

    1 program: header declarations subprograms comp_statement "." •

    $default  reduce using rule 1 (program)


State 69

   41 type_defs: "IDENTIFIER" "=" • type_def

    "array"       shift, and go to state 112
    "list"        shift, and go to state 113
    "set"         shift, and go to state 114
    "record"      shift, and go to state 115
    "+ or -"      shift, and go to state 116
    "IDENTIFIER"  shift, and go to state 117
    "BCONST"      shift, and go to state 118
    "CCONST"      shift, and go to state 119

    $default  reduce using rule 57 (sign)

    type_def  go to state 120
    limit     go to state 121
    sign      go to state 122


State 70

   38 typedefs: "type" type_defs error •

    $default  reduce using rule 38 (typedefs)


State 71

   37 typedefs: "type" type_defs ";" •
   40 type_defs: type_defs ";" • "IDENTIFIER" "=" type_def

    "IDENTIFIER"  shift, and go to state 123

    $default  reduce using rule 37 (typedefs)


State 72

   68 identifiers: "IDENTIFIER" •

    $default  reduce using rule 68 (identifiers)


State 73

   67 identifiers: identifiers • "," "IDENTIFIER"
   72 variable_defs: identifiers • ":" typename

    ","  shift, and go to state 124
    ":"  shift, and go to state 125


State 74

   69 vardefs: "var" variable_defs • ";"
   71 variable_defs: variable_defs • ";" identifiers ":" typename

    ";"  shift, and go to state 126


State 75

   19 expression: "length" "(" • expression ")"

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 127
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 76

   20 expression: "new" "(" • expression ")"

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 128
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 77

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression
   15           | "+ or -" expression •

    error                          shift, and go to state 85
    "> or >= or < or <= or <>"     shift, and go to state 86
    "* or / or DIV or MOD or AND"  shift, and go to state 89
    "IN"                           shift, and go to state 90
    "="                            shift, and go to state 91

    error     [reduce using rule 15 (expression)]
    "of"      reduce using rule 15 (expression)
    "end"     reduce using rule 15 (expression)
    "then"    reduce using rule 15 (expression)
    "else"    reduce using rule 15 (expression)
    "do"      reduce using rule 15 (expression)
    "to"      reduce using rule 15 (expression)
    "downto"  reduce using rule 15 (expression)
    "+ or -"  reduce using rule 15 (expression)
    "||"      reduce using rule 15 (expression)
    "IN"      [reduce using rule 15 (expression)]
    ")"       reduce using rule 15 (expression)
    ";"       reduce using rule 15 (expression)
    ","       reduce using rule 15 (expression)
    "]"       reduce using rule 15 (expression)


State 78

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression
   16           | "NOT" expression •

    error                       shift, and go to state 85
    "> or >= or < or <= or <>"  shift, and go to state 86
    "IN"                        shift, and go to state 90
    "="                         shift, and go to state 91

    error                          [reduce using rule 16 (expression)]
    "of"                           reduce using rule 16 (expression)
    "end"                          reduce using rule 16 (expression)
    "then"                         reduce using rule 16 (expression)
    "else"                         reduce using rule 16 (expression)
    "do"                           reduce using rule 16 (expression)
    "to"                           reduce using rule 16 (expression)
    "downto"                       reduce using rule 16 (expression)
    "+ or -"                       reduce using rule 16 (expression)
    "||"                           reduce using rule 16 (expression)
    "* or / or DIV or MOD or AND"  reduce using rule 16 (expression)
    "IN"                           [reduce using rule 16 (expression)]
    ")"                            reduce using rule 16 (expression)
    ";"                            reduce using rule 16 (expression)
    ","                            reduce using rule 16 (expression)
    "]"                            reduce using rule 16 (expression)


State 79

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression
   22           | "(" expression • ")"

    error                          shift, and go to state 85
    "> or >= or < or <= or <>"     shift, and go to state 86
    "+ or -"                       shift, and go to state 87
    "||"                           shift, and go to state 88
    "* or / or DIV or MOD or AND"  shift, and go to state 89
    "IN"                           shift, and go to state 90
    ")"                            shift, and go to state 129
    "="                            shift, and go to state 91


State 80

   36 setlistexpression: "[" "]" •

    $default  reduce using rule 36 (setlistexpression)


State 81

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression
   30 expressions: expression •

    error                          shift, and go to state 85
    "> or >= or < or <= or <>"     shift, and go to state 86
    "+ or -"                       shift, and go to state 87
    "||"                           shift, and go to state 88
    "* or / or DIV or MOD or AND"  shift, and go to state 89
    "IN"                           shift, and go to state 90
    "="                            shift, and go to state 91

    ")"  reduce using rule 30 (expressions)
    ","  reduce using rule 30 (expressions)
    "]"  reduce using rule 30 (expressions)


State 82

   29 expressions: expressions • "," expression
   35 setlistexpression: "[" expressions • "]"

    ","  shift, and go to state 130
    "]"  shift, and go to state 131


State 83

   18 expression: "IDENTIFIER" "(" • expressions ")"

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 81
    variable           go to state 40
    expressions        go to state 132
    constant           go to state 41
    setlistexpression  go to state 42


State 84

   27 variable: "list function" "(" • expression ")"
   28         | "list function" "(" • expression error

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 133
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 85

   14 expression: expression error • expression

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 134
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 86

    8 expression: expression "> or >= or < or <= or <>" • expression

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 135
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 87

   12 expression: expression "+ or -" • expression

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 136
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 88

   11 expression: expression "||" • expression

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 137
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 89

   13 expression: expression "* or / or DIV or MOD or AND" • expression

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 138
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 90

   10 expression: expression "IN" • expression

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 139
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 91

    9 expression: expression "=" • expression

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 140
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 92

   25 variable: variable "." • "IDENTIFIER"

    "IDENTIFIER"  shift, and go to state 141


State 93

   26 variable: variable "[" • expressions "]"

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 81
    variable           go to state 40
    expressions        go to state 142
    constant           go to state 41
    setlistexpression  go to state 42


State 94

    6 constant_defs: constant_defs ";" "IDENTIFIER" "=" • expression

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 143
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 95

   81 formal_parameters: "(" • parameter_list ")"

    "var"  shift, and go to state 144

    $default  reduce using rule 86 (pass)

    parameter_list  go to state 145
    pass            go to state 146


State 96

   77 sub_header: "function" "IDENTIFIER" formal_parameters • ":" standard_type
   78           | "function" "IDENTIFIER" formal_parameters • ":" "list"

    ":"  shift, and go to state 147


State 97

   79 sub_header: "procedure" "IDENTIFIER" formal_parameters •

    $default  reduce using rule 79 (sub_header)


State 98

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression
  102 if_statement: "if" expression • "then" statement if_tail
  103             | "if" expression • error statement if_tail

    error                          shift, and go to state 148
    "then"                         shift, and go to state 149
    "> or >= or < or <= or <>"     shift, and go to state 86
    "+ or -"                       shift, and go to state 87
    "||"                           shift, and go to state 88
    "* or / or DIV or MOD or AND"  shift, and go to state 89
    "IN"                           shift, and go to state 90
    "="                            shift, and go to state 91


State 99

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression
  117 while_statement: "while" expression • "do" statement
  118                | "while" expression • error statement

    error                          shift, and go to state 150
    "do"                           shift, and go to state 151
    "> or >= or < or <= or <>"     shift, and go to state 86
    "+ or -"                       shift, and go to state 87
    "||"                           shift, and go to state 88
    "* or / or DIV or MOD or AND"  shift, and go to state 89
    "IN"                           shift, and go to state 90
    "="                            shift, and go to state 91


State 100

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression
  106 case_statement: "case" expression • "of" cases case_tail "end"

    error                          shift, and go to state 85
    "of"                           shift, and go to state 152
    "> or >= or < or <= or <>"     shift, and go to state 86
    "+ or -"                       shift, and go to state 87
    "||"                           shift, and go to state 88
    "* or / or DIV or MOD or AND"  shift, and go to state 89
    "IN"                           shift, and go to state 90
    "="                            shift, and go to state 91


State 101

  119 for_statement: "for" "IDENTIFIER" • ":=" iter_space "do" statement

    ":="  shift, and go to state 153


State 102

   24 variable: "IDENTIFIER" •

    $default  reduce using rule 24 (variable)


State 103

   25 variable: variable • "." "IDENTIFIER"
   26         | variable • "[" expressions "]"
  122 with_statement: "with" variable • "do" statement

    "do"  shift, and go to state 154
    "."   shift, and go to state 92
    "["   shift, and go to state 93


State 104

  125 io_statement: "read" "(" • read_list ")"

    "IDENTIFIER"     shift, and go to state 102
    "list function"  shift, and go to state 38

    variable   go to state 155
    read_list  go to state 156
    read_item  go to state 157


State 105

  126 io_statement: "write" "(" • write_list ")"

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38
    "string"         shift, and go to state 158

    expression         go to state 159
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42
    write_list         go to state 160
    write_item         go to state 161


State 106

  124 subprogram_call: "IDENTIFIER" "(" • expressions ")"

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 81
    variable           go to state 40
    expressions        go to state 162
    constant           go to state 41
    setlistexpression  go to state 42


State 107

  100 assignment: variable ":=" • expression
  101           | variable ":=" • "string"

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38
    "string"         shift, and go to state 163

    expression         go to state 164
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 108

   87 comp_statement: "begin" statements "end" •

    $default  reduce using rule 87 (comp_statement)


State 109

   88 statements: statements ";" • statement

    "begin"          shift, and go to state 19
    "if"             shift, and go to state 46
    "while"          shift, and go to state 47
    "case"           shift, and go to state 48
    "for"            shift, and go to state 49
    "with"           shift, and go to state 50
    "read"           shift, and go to state 51
    "write"          shift, and go to state 52
    "IDENTIFIER"     shift, and go to state 53
    "list function"  shift, and go to state 38

    $default  reduce using rule 99 (statement)

    variable         go to state 54
    comp_statement   go to state 55
    statement        go to state 165
    assignment       go to state 58
    if_statement     go to state 59
    case_statement   go to state 60
    while_statement  go to state 61
    for_statement    go to state 62
    with_statement   go to state 63
    subprogram_call  go to state 64
    io_statement     go to state 65


State 110

   75 subprogram: sub_header ";" "forward" •

    $default  reduce using rule 75 (subprogram)


State 111

   76 subprogram: sub_header ";" declarations • subprograms comp_statement

    $default  reduce using rule 74 (subprograms)

    subprograms  go to state 166


State 112

   42 type_def: "array" • "[" dims "]" "of" typename

    "["  shift, and go to state 167


State 113

   43 type_def: "list" • "of" typename

    "of"  shift, and go to state 168


State 114

   44 type_def: "set" • "of" typename

    "of"  shift, and go to state 169


State 115

   45 type_def: "record" • fields "end"

    "IDENTIFIER"  shift, and go to state 72

    fields       go to state 170
    field        go to state 171
    identifiers  go to state 172


State 116

   54 limit: "+ or -" • "IDENTIFIER"
   56 sign: "+ or -" •

    "IDENTIFIER"  shift, and go to state 173

    $default  reduce using rule 56 (sign)


State 117

   55 limit: "IDENTIFIER" •

    $default  reduce using rule 55 (limit)


State 118

   53 limit: "BCONST" •

    $default  reduce using rule 53 (limit)


State 119

   52 limit: "CCONST" •

    $default  reduce using rule 52 (limit)


State 120

   41 type_defs: "IDENTIFIER" "=" type_def •

    $default  reduce using rule 41 (type_defs)


State 121

   46 type_def: limit • ".." limit

    ".."  shift, and go to state 174


State 122

   51 limit: sign • "ICONST"

    "ICONST"  shift, and go to state 175


State 123

   40 type_defs: type_defs ";" "IDENTIFIER" • "=" type_def

    "="  shift, and go to state 176


State 124

   67 identifiers: identifiers "," • "IDENTIFIER"

    "IDENTIFIER"  shift, and go to state 177


State 125

   72 variable_defs: identifiers ":" • typename

    "integer"     shift, and go to state 178
    "real"        shift, and go to state 179
    "boolean"     shift, and go to state 180
    "char"        shift, and go to state 181
    "IDENTIFIER"  shift, and go to state 182

    typename       go to state 183
    standard_type  go to state 184


State 126

   69 vardefs: "var" variable_defs ";" •
   71 variable_defs: variable_defs ";" • identifiers ":" typename

    "IDENTIFIER"  shift, and go to state 72

    $default  reduce using rule 69 (vardefs)

    identifiers  go to state 185


State 127

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression
   19           | "length" "(" expression • ")"

    error                          shift, and go to state 85
    "> or >= or < or <= or <>"     shift, and go to state 86
    "+ or -"                       shift, and go to state 87
    "||"                           shift, and go to state 88
    "* or / or DIV or MOD or AND"  shift, and go to state 89
    "IN"                           shift, and go to state 90
    ")"                            shift, and go to state 186
    "="                            shift, and go to state 91


State 128

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression
   20           | "new" "(" expression • ")"

    error                          shift, and go to state 85
    "> or >= or < or <= or <>"     shift, and go to state 86
    "+ or -"                       shift, and go to state 87
    "||"                           shift, and go to state 88
    "* or / or DIV or MOD or AND"  shift, and go to state 89
    "IN"                           shift, and go to state 90
    ")"                            shift, and go to state 187
    "="                            shift, and go to state 91


State 129

   22 expression: "(" expression ")" •

    $default  reduce using rule 22 (expression)


State 130

   29 expressions: expressions "," • expression

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 188
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 131

   35 setlistexpression: "[" expressions "]" •

    $default  reduce using rule 35 (setlistexpression)


State 132

   18 expression: "IDENTIFIER" "(" expressions • ")"
   29 expressions: expressions • "," expression

    ")"  shift, and go to state 189
    ","  shift, and go to state 130


State 133

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression
   27 variable: "list function" "(" expression • ")"
   28         | "list function" "(" expression • error

    error                          shift, and go to state 190
    "> or >= or < or <= or <>"     shift, and go to state 86
    "+ or -"                       shift, and go to state 87
    "||"                           shift, and go to state 88
    "* or / or DIV or MOD or AND"  shift, and go to state 89
    "IN"                           shift, and go to state 90
    ")"                            shift, and go to state 191
    "="                            shift, and go to state 91


State 134

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression
   14           | expression error expression •

    error                          shift, and go to state 85
    "> or >= or < or <= or <>"     shift, and go to state 86
    "+ or -"                       shift, and go to state 87
    "||"                           shift, and go to state 88
    "* or / or DIV or MOD or AND"  shift, and go to state 89
    "IN"                           shift, and go to state 90
    "="                            shift, and go to state 91

    error                          [reduce using rule 14 (expression)]
    "of"                           reduce using rule 14 (expression)
    "end"                          reduce using rule 14 (expression)
    "then"                         reduce using rule 14 (expression)
    "else"                         reduce using rule 14 (expression)
    "do"                           reduce using rule 14 (expression)
    "to"                           reduce using rule 14 (expression)
    "downto"                       reduce using rule 14 (expression)
    "> or >= or < or <= or <>"     [reduce using rule 14 (expression)]
    "+ or -"                       [reduce using rule 14 (expression)]
    "||"                           [reduce using rule 14 (expression)]
    "* or / or DIV or MOD or AND"  [reduce using rule 14 (expression)]
    "IN"                           [reduce using rule 14 (expression)]
    ")"                            reduce using rule 14 (expression)
    ";"                            reduce using rule 14 (expression)
    ","                            reduce using rule 14 (expression)
    "="                            [reduce using rule 14 (expression)]
    "]"                            reduce using rule 14 (expression)


State 135

    8 expression: expression • "> or >= or < or <= or <>" expression
    8           | expression "> or >= or < or <= or <>" expression •
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression

    error  shift, and go to state 85
    "IN"   shift, and go to state 90

    "> or >= or < or <= or <>"  error (nonassociative)
    "="                         error (nonassociative)

    error                          [reduce using rule 8 (expression)]
    "of"                           reduce using rule 8 (expression)
    "end"                          reduce using rule 8 (expression)
    "then"                         reduce using rule 8 (expression)
    "else"                         reduce using rule 8 (expression)
    "do"                           reduce using rule 8 (expression)
    "to"                           reduce using rule 8 (expression)
    "downto"                       reduce using rule 8 (expression)
    "+ or -"                       reduce using rule 8 (expression)
    "||"                           reduce using rule 8 (expression)
    "* or / or DIV or MOD or AND"  reduce using rule 8 (expression)
    "IN"                           [reduce using rule 8 (expression)]
    ")"                            reduce using rule 8 (expression)
    ";"                            reduce using rule 8 (expression)
    ","                            reduce using rule 8 (expression)
    "]"                            reduce using rule 8 (expression)


State 136

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   12           | expression "+ or -" expression •
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression

    error                          shift, and go to state 85
    "> or >= or < or <= or <>"     shift, and go to state 86
    "* or / or DIV or MOD or AND"  shift, and go to state 89
    "IN"                           shift, and go to state 90
    "="                            shift, and go to state 91

    error     [reduce using rule 12 (expression)]
    "of"      reduce using rule 12 (expression)
    "end"     reduce using rule 12 (expression)
    "then"    reduce using rule 12 (expression)
    "else"    reduce using rule 12 (expression)
    "do"      reduce using rule 12 (expression)
    "to"      reduce using rule 12 (expression)
    "downto"  reduce using rule 12 (expression)
    "+ or -"  reduce using rule 12 (expression)
    "||"      reduce using rule 12 (expression)
    "IN"      [reduce using rule 12 (expression)]
    ")"       reduce using rule 12 (expression)
    ";"       reduce using rule 12 (expression)
    ","       reduce using rule 12 (expression)
    "]"       reduce using rule 12 (expression)


State 137

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   11           | expression "||" expression •
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression

    error                          shift, and go to state 85
    "> or >= or < or <= or <>"     shift, and go to state 86
    "+ or -"                       shift, and go to state 87
    "* or / or DIV or MOD or AND"  shift, and go to state 89
    "IN"                           shift, and go to state 90
    "="                            shift, and go to state 91

    error     [reduce using rule 11 (expression)]
    "of"      reduce using rule 11 (expression)
    "end"     reduce using rule 11 (expression)
    "then"    reduce using rule 11 (expression)
    "else"    reduce using rule 11 (expression)
    "do"      reduce using rule 11 (expression)
    "to"      reduce using rule 11 (expression)
    "downto"  reduce using rule 11 (expression)
    "||"      reduce using rule 11 (expression)
    "IN"      [reduce using rule 11 (expression)]
    ")"       reduce using rule 11 (expression)
    ";"       reduce using rule 11 (expression)
    ","       reduce using rule 11 (expression)
    "]"       reduce using rule 11 (expression)


State 138

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   13           | expression "* or / or DIV or MOD or AND" expression •
   14           | expression • error expression

    error                       shift, and go to state 85
    "> or >= or < or <= or <>"  shift, and go to state 86
    "IN"                        shift, and go to state 90
    "="                         shift, and go to state 91

    error                          [reduce using rule 13 (expression)]
    "of"                           reduce using rule 13 (expression)
    "end"                          reduce using rule 13 (expression)
    "then"                         reduce using rule 13 (expression)
    "else"                         reduce using rule 13 (expression)
    "do"                           reduce using rule 13 (expression)
    "to"                           reduce using rule 13 (expression)
    "downto"                       reduce using rule 13 (expression)
    "+ or -"                       reduce using rule 13 (expression)
    "||"                           reduce using rule 13 (expression)
    "* or / or DIV or MOD or AND"  reduce using rule 13 (expression)
    "IN"                           [reduce using rule 13 (expression)]
    ")"                            reduce using rule 13 (expression)
    ";"                            reduce using rule 13 (expression)
    ","                            reduce using rule 13 (expression)
    "]"                            reduce using rule 13 (expression)


State 139

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   10           | expression "IN" expression •
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression

    error                          shift, and go to state 85
    "> or >= or < or <= or <>"     shift, and go to state 86
    "+ or -"                       shift, and go to state 87
    "||"                           shift, and go to state 88
    "* or / or DIV or MOD or AND"  shift, and go to state 89
    "IN"                           shift, and go to state 90
    "="                            shift, and go to state 91

    error                          [reduce using rule 10 (expression)]
    "of"                           reduce using rule 10 (expression)
    "end"                          reduce using rule 10 (expression)
    "then"                         reduce using rule 10 (expression)
    "else"                         reduce using rule 10 (expression)
    "do"                           reduce using rule 10 (expression)
    "to"                           reduce using rule 10 (expression)
    "downto"                       reduce using rule 10 (expression)
    "> or >= or < or <= or <>"     [reduce using rule 10 (expression)]
    "+ or -"                       [reduce using rule 10 (expression)]
    "||"                           [reduce using rule 10 (expression)]
    "* or / or DIV or MOD or AND"  [reduce using rule 10 (expression)]
    "IN"                           [reduce using rule 10 (expression)]
    ")"                            reduce using rule 10 (expression)
    ";"                            reduce using rule 10 (expression)
    ","                            reduce using rule 10 (expression)
    "="                            [reduce using rule 10 (expression)]
    "]"                            reduce using rule 10 (expression)


State 140

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
    9           | expression "=" expression •
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression

    error  shift, and go to state 85
    "IN"   shift, and go to state 90

    "> or >= or < or <= or <>"  error (nonassociative)
    "="                         error (nonassociative)

    error                          [reduce using rule 9 (expression)]
    "of"                           reduce using rule 9 (expression)
    "end"                          reduce using rule 9 (expression)
    "then"                         reduce using rule 9 (expression)
    "else"                         reduce using rule 9 (expression)
    "do"                           reduce using rule 9 (expression)
    "to"                           reduce using rule 9 (expression)
    "downto"                       reduce using rule 9 (expression)
    "+ or -"                       reduce using rule 9 (expression)
    "||"                           reduce using rule 9 (expression)
    "* or / or DIV or MOD or AND"  reduce using rule 9 (expression)
    "IN"                           [reduce using rule 9 (expression)]
    ")"                            reduce using rule 9 (expression)
    ";"                            reduce using rule 9 (expression)
    ","                            reduce using rule 9 (expression)
    "]"                            reduce using rule 9 (expression)


State 141

   25 variable: variable "." "IDENTIFIER" •

    $default  reduce using rule 25 (variable)


State 142

   26 variable: variable "[" expressions • "]"
   29 expressions: expressions • "," expression

    ","  shift, and go to state 130
    "]"  shift, and go to state 192


State 143

    6 constant_defs: constant_defs ";" "IDENTIFIER" "=" expression •
    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression

    error                          shift, and go to state 85
    "> or >= or < or <= or <>"     shift, and go to state 86
    "+ or -"                       shift, and go to state 87
    "||"                           shift, and go to state 88
    "* or / or DIV or MOD or AND"  shift, and go to state 89
    "IN"                           shift, and go to state 90
    "="                            shift, and go to state 91

    ";"  reduce using rule 6 (constant_defs)


State 144

   85 pass: "var" •

    $default  reduce using rule 85 (pass)


State 145

   81 formal_parameters: "(" parameter_list • ")"
   83 parameter_list: parameter_list • ";" pass identifiers ":" typename

    ")"  shift, and go to state 193
    ";"  shift, and go to state 194


State 146

   84 parameter_list: pass • identifiers ":" typename

    "IDENTIFIER"  shift, and go to state 72

    identifiers  go to state 195


State 147

   77 sub_header: "function" "IDENTIFIER" formal_parameters ":" • standard_type
   78           | "function" "IDENTIFIER" formal_parameters ":" • "list"

    "list"     shift, and go to state 196
    "integer"  shift, and go to state 178
    "real"     shift, and go to state 179
    "boolean"  shift, and go to state 180
    "char"     shift, and go to state 181

    standard_type  go to state 197


State 148

   14 expression: expression error • expression
  103 if_statement: "if" expression error • statement if_tail

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "begin"          shift, and go to state 19
    "if"             shift, and go to state 46
    "while"          shift, and go to state 47
    "case"           shift, and go to state 48
    "for"            shift, and go to state 49
    "with"           shift, and go to state 50
    "read"           shift, and go to state 51
    "write"          shift, and go to state 52
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 198
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    $default  reduce using rule 99 (statement)

    expression         go to state 134
    variable           go to state 199
    constant           go to state 41
    setlistexpression  go to state 42
    comp_statement     go to state 55
    statement          go to state 200
    assignment         go to state 58
    if_statement       go to state 59
    case_statement     go to state 60
    while_statement    go to state 61
    for_statement      go to state 62
    with_statement     go to state 63
    subprogram_call    go to state 64
    io_statement       go to state 65


State 149

  102 if_statement: "if" expression "then" • statement if_tail

    "begin"          shift, and go to state 19
    "if"             shift, and go to state 46
    "while"          shift, and go to state 47
    "case"           shift, and go to state 48
    "for"            shift, and go to state 49
    "with"           shift, and go to state 50
    "read"           shift, and go to state 51
    "write"          shift, and go to state 52
    "IDENTIFIER"     shift, and go to state 53
    "list function"  shift, and go to state 38

    $default  reduce using rule 99 (statement)

    variable         go to state 54
    comp_statement   go to state 55
    statement        go to state 201
    assignment       go to state 58
    if_statement     go to state 59
    case_statement   go to state 60
    while_statement  go to state 61
    for_statement    go to state 62
    with_statement   go to state 63
    subprogram_call  go to state 64
    io_statement     go to state 65


State 150

   14 expression: expression error • expression
  118 while_statement: "while" expression error • statement

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "begin"          shift, and go to state 19
    "if"             shift, and go to state 46
    "while"          shift, and go to state 47
    "case"           shift, and go to state 48
    "for"            shift, and go to state 49
    "with"           shift, and go to state 50
    "read"           shift, and go to state 51
    "write"          shift, and go to state 52
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 198
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    $default  reduce using rule 99 (statement)

    expression         go to state 134
    variable           go to state 199
    constant           go to state 41
    setlistexpression  go to state 42
    comp_statement     go to state 55
    statement          go to state 202
    assignment         go to state 58
    if_statement       go to state 59
    case_statement     go to state 60
    while_statement    go to state 61
    for_statement      go to state 62
    with_statement     go to state 63
    subprogram_call    go to state 64
    io_statement       go to state 65


State 151

  117 while_statement: "while" expression "do" • statement

    "begin"          shift, and go to state 19
    "if"             shift, and go to state 46
    "while"          shift, and go to state 47
    "case"           shift, and go to state 48
    "for"            shift, and go to state 49
    "with"           shift, and go to state 50
    "read"           shift, and go to state 51
    "write"          shift, and go to state 52
    "IDENTIFIER"     shift, and go to state 53
    "list function"  shift, and go to state 38

    $default  reduce using rule 99 (statement)

    variable         go to state 54
    comp_statement   go to state 55
    statement        go to state 203
    assignment       go to state 58
    if_statement     go to state 59
    case_statement   go to state 60
    while_statement  go to state 61
    for_statement    go to state 62
    with_statement   go to state 63
    subprogram_call  go to state 64
    io_statement     go to state 65


State 152

  106 case_statement: "case" expression "of" • cases case_tail "end"

    "+ or -"  shift, and go to state 204

    "end"     reduce using rule 110 (single_case)
    ";"       reduce using rule 110 (single_case)
    $default  reduce using rule 57 (sign)

    sign         go to state 205
    cases        go to state 206
    single_case  go to state 207
    label_list   go to state 208
    label        go to state 209


State 153

  119 for_statement: "for" "IDENTIFIER" ":=" • iter_space "do" statement

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 210
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42
    iter_space         go to state 211


State 154

  122 with_statement: "with" variable "do" • statement

    "begin"          shift, and go to state 19
    "if"             shift, and go to state 46
    "while"          shift, and go to state 47
    "case"           shift, and go to state 48
    "for"            shift, and go to state 49
    "with"           shift, and go to state 50
    "read"           shift, and go to state 51
    "write"          shift, and go to state 52
    "IDENTIFIER"     shift, and go to state 53
    "list function"  shift, and go to state 38

    $default  reduce using rule 99 (statement)

    variable         go to state 54
    comp_statement   go to state 55
    statement        go to state 212
    assignment       go to state 58
    if_statement     go to state 59
    case_statement   go to state 60
    while_statement  go to state 61
    for_statement    go to state 62
    with_statement   go to state 63
    subprogram_call  go to state 64
    io_statement     go to state 65


State 155

   25 variable: variable • "." "IDENTIFIER"
   26         | variable • "[" expressions "]"
  129 read_item: variable •

    "."  shift, and go to state 92
    "["  shift, and go to state 93

    $default  reduce using rule 129 (read_item)


State 156

  125 io_statement: "read" "(" read_list • ")"
  127 read_list: read_list • "," read_item

    ")"  shift, and go to state 213
    ","  shift, and go to state 214


State 157

  128 read_list: read_item •

    $default  reduce using rule 128 (read_list)


State 158

  133 write_item: "string" •

    $default  reduce using rule 133 (write_item)


State 159

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression
  132 write_item: expression •

    error                          shift, and go to state 85
    "> or >= or < or <= or <>"     shift, and go to state 86
    "+ or -"                       shift, and go to state 87
    "||"                           shift, and go to state 88
    "* or / or DIV or MOD or AND"  shift, and go to state 89
    "IN"                           shift, and go to state 90
    "="                            shift, and go to state 91

    ")"  reduce using rule 132 (write_item)
    ","  reduce using rule 132 (write_item)


State 160

  126 io_statement: "write" "(" write_list • ")"
  130 write_list: write_list • "," write_item

    ")"  shift, and go to state 215
    ","  shift, and go to state 216


State 161

  131 write_list: write_item •

    $default  reduce using rule 131 (write_list)


State 162

   29 expressions: expressions • "," expression
  124 subprogram_call: "IDENTIFIER" "(" expressions • ")"

    ")"  shift, and go to state 217
    ","  shift, and go to state 130


State 163

  101 assignment: variable ":=" "string" •

    $default  reduce using rule 101 (assignment)


State 164

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression
  100 assignment: variable ":=" expression •

    error                          shift, and go to state 85
    "> or >= or < or <= or <>"     shift, and go to state 86
    "+ or -"                       shift, and go to state 87
    "||"                           shift, and go to state 88
    "* or / or DIV or MOD or AND"  shift, and go to state 89
    "IN"                           shift, and go to state 90
    "="                            shift, and go to state 91

    "end"   reduce using rule 100 (assignment)
    "else"  reduce using rule 100 (assignment)
    ";"     reduce using rule 100 (assignment)


State 165

   88 statements: statements ";" statement •

    $default  reduce using rule 88 (statements)


State 166

   73 subprograms: subprograms • subprogram ";"
   76 subprogram: sub_header ";" declarations subprograms • comp_statement

    "function"   shift, and go to state 17
    "procedure"  shift, and go to state 18
    "begin"      shift, and go to state 19

    subprogram      go to state 20
    sub_header      go to state 21
    comp_statement  go to state 218


State 167

   42 type_def: "array" "[" • dims "]" "of" typename

    "+ or -"      shift, and go to state 116
    "IDENTIFIER"  shift, and go to state 219
    "BCONST"      shift, and go to state 118
    "CCONST"      shift, and go to state 119

    $default  reduce using rule 57 (sign)

    dims    go to state 220
    limits  go to state 221
    limit   go to state 222
    sign    go to state 122


State 168

   43 type_def: "list" "of" • typename

    "integer"     shift, and go to state 178
    "real"        shift, and go to state 179
    "boolean"     shift, and go to state 180
    "char"        shift, and go to state 181
    "IDENTIFIER"  shift, and go to state 182

    typename       go to state 223
    standard_type  go to state 184


State 169

   44 type_def: "set" "of" • typename

    "integer"     shift, and go to state 178
    "real"        shift, and go to state 179
    "boolean"     shift, and go to state 180
    "char"        shift, and go to state 181
    "IDENTIFIER"  shift, and go to state 182

    typename       go to state 224
    standard_type  go to state 184


State 170

   45 type_def: "record" fields • "end"
   64 fields: fields • ";" field

    "end"  shift, and go to state 225
    ";"    shift, and go to state 226


State 171

   65 fields: field •

    $default  reduce using rule 65 (fields)


State 172

   66 field: identifiers • ":" typename
   67 identifiers: identifiers • "," "IDENTIFIER"

    ","  shift, and go to state 124
    ":"  shift, and go to state 227


State 173

   54 limit: "+ or -" "IDENTIFIER" •

    $default  reduce using rule 54 (limit)


State 174

   46 type_def: limit ".." • limit

    "+ or -"      shift, and go to state 116
    "IDENTIFIER"  shift, and go to state 117
    "BCONST"      shift, and go to state 118
    "CCONST"      shift, and go to state 119

    $default  reduce using rule 57 (sign)

    limit  go to state 228
    sign   go to state 122


State 175

   51 limit: sign "ICONST" •

    $default  reduce using rule 51 (limit)


State 176

   40 type_defs: type_defs ";" "IDENTIFIER" "=" • type_def

    "array"       shift, and go to state 112
    "list"        shift, and go to state 113
    "set"         shift, and go to state 114
    "record"      shift, and go to state 115
    "+ or -"      shift, and go to state 116
    "IDENTIFIER"  shift, and go to state 117
    "BCONST"      shift, and go to state 118
    "CCONST"      shift, and go to state 119

    $default  reduce using rule 57 (sign)

    type_def  go to state 229
    limit     go to state 121
    sign      go to state 122


State 177

   67 identifiers: identifiers "," "IDENTIFIER" •

    $default  reduce using rule 67 (identifiers)


State 178

   60 standard_type: "integer" •

    $default  reduce using rule 60 (standard_type)


State 179

   61 standard_type: "real" •

    $default  reduce using rule 61 (standard_type)


State 180

   62 standard_type: "boolean" •

    $default  reduce using rule 62 (standard_type)


State 181

   63 standard_type: "char" •

    $default  reduce using rule 63 (standard_type)


State 182

   59 typename: "IDENTIFIER" •

    $default  reduce using rule 59 (typename)


State 183

   72 variable_defs: identifiers ":" typename •

    $default  reduce using rule 72 (variable_defs)


State 184

   58 typename: standard_type •

    $default  reduce using rule 58 (typename)


State 185

   67 identifiers: identifiers • "," "IDENTIFIER"
   71 variable_defs: variable_defs ";" identifiers • ":" typename

    ","  shift, and go to state 124
    ":"  shift, and go to state 230


State 186

   19 expression: "length" "(" expression ")" •

    $default  reduce using rule 19 (expression)


State 187

   20 expression: "new" "(" expression ")" •

    $default  reduce using rule 20 (expression)


State 188

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression
   29 expressions: expressions "," expression •

    error                          shift, and go to state 85
    "> or >= or < or <= or <>"     shift, and go to state 86
    "+ or -"                       shift, and go to state 87
    "||"                           shift, and go to state 88
    "* or / or DIV or MOD or AND"  shift, and go to state 89
    "IN"                           shift, and go to state 90
    "="                            shift, and go to state 91

    ")"  reduce using rule 29 (expressions)
    ","  reduce using rule 29 (expressions)
    "]"  reduce using rule 29 (expressions)


State 189

   18 expression: "IDENTIFIER" "(" expressions ")" •

    $default  reduce using rule 18 (expression)


State 190

   14 expression: expression error • expression
   28 variable: "list function" "(" expression error •

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    "+ or -"  [reduce using rule 28 (variable)]
    "["       [reduce using rule 28 (variable)]
    $default  reduce using rule 28 (variable)

    expression         go to state 134
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 191

   27 variable: "list function" "(" expression ")" •

    $default  reduce using rule 27 (variable)


State 192

   26 variable: variable "[" expressions "]" •

    $default  reduce using rule 26 (variable)


State 193

   81 formal_parameters: "(" parameter_list ")" •

    $default  reduce using rule 81 (formal_parameters)


State 194

   83 parameter_list: parameter_list ";" • pass identifiers ":" typename

    "var"  shift, and go to state 144

    $default  reduce using rule 86 (pass)

    pass  go to state 231


State 195

   67 identifiers: identifiers • "," "IDENTIFIER"
   84 parameter_list: pass identifiers • ":" typename

    ","  shift, and go to state 124
    ":"  shift, and go to state 232


State 196

   78 sub_header: "function" "IDENTIFIER" formal_parameters ":" "list" •

    $default  reduce using rule 78 (sub_header)


State 197

   77 sub_header: "function" "IDENTIFIER" formal_parameters ":" standard_type •

    $default  reduce using rule 77 (sub_header)


State 198

   18 expression: "IDENTIFIER" • "(" expressions ")"
   24 variable: "IDENTIFIER" •
  123 subprogram_call: "IDENTIFIER" •
  124                | "IDENTIFIER" • "(" expressions ")"

    "("  shift, and go to state 233

    "end"     reduce using rule 123 (subprogram_call)
    "else"    reduce using rule 123 (subprogram_call)
    ";"       reduce using rule 123 (subprogram_call)
    $default  reduce using rule 24 (variable)


State 199

   17 expression: variable •
   25 variable: variable • "." "IDENTIFIER"
   26         | variable • "[" expressions "]"
  100 assignment: variable • ":=" expression
  101           | variable • ":=" "string"

    "."   shift, and go to state 92
    "["   shift, and go to state 93
    ":="  shift, and go to state 107

    $default  reduce using rule 17 (expression)


State 200

  103 if_statement: "if" expression error statement • if_tail

    "else"  shift, and go to state 234

    "else"    [reduce using rule 105 (if_tail)]
    $default  reduce using rule 105 (if_tail)

    if_tail  go to state 235


State 201

  102 if_statement: "if" expression "then" statement • if_tail

    "else"  shift, and go to state 234

    "else"    [reduce using rule 105 (if_tail)]
    $default  reduce using rule 105 (if_tail)

    if_tail  go to state 236


State 202

  118 while_statement: "while" expression error statement •

    $default  reduce using rule 118 (while_statement)


State 203

  117 while_statement: "while" expression "do" statement •

    $default  reduce using rule 117 (while_statement)


State 204

   56 sign: "+ or -" •

    $default  reduce using rule 56 (sign)


State 205

  113 label: sign • constant
  114      | sign • "IDENTIFIER"

    "IDENTIFIER"  shift, and go to state 237
    "ICONST"      shift, and go to state 34
    "RCONST"      shift, and go to state 35
    "BCONST"      shift, and go to state 36
    "CCONST"      shift, and go to state 37

    constant  go to state 238


State 206

  106 case_statement: "case" expression "of" cases • case_tail "end"
  107 cases: cases • ";" single_case

    ";"  shift, and go to state 239

    $default  reduce using rule 116 (case_tail)

    case_tail  go to state 240


State 207

  108 cases: single_case •

    $default  reduce using rule 108 (cases)


State 208

  109 single_case: label_list • ":" statement
  111 label_list: label_list • "," label

    ","  shift, and go to state 241
    ":"  shift, and go to state 242


State 209

  112 label_list: label •

    $default  reduce using rule 112 (label_list)


State 210

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression
  120 iter_space: expression • "to" expression
  121           | expression • "downto" expression

    error                          shift, and go to state 85
    "to"                           shift, and go to state 243
    "downto"                       shift, and go to state 244
    "> or >= or < or <= or <>"     shift, and go to state 86
    "+ or -"                       shift, and go to state 87
    "||"                           shift, and go to state 88
    "* or / or DIV or MOD or AND"  shift, and go to state 89
    "IN"                           shift, and go to state 90
    "="                            shift, and go to state 91


State 211

  119 for_statement: "for" "IDENTIFIER" ":=" iter_space • "do" statement

    "do"  shift, and go to state 245


State 212

  122 with_statement: "with" variable "do" statement •

    $default  reduce using rule 122 (with_statement)


State 213

  125 io_statement: "read" "(" read_list ")" •

    $default  reduce using rule 125 (io_statement)


State 214

  127 read_list: read_list "," • read_item

    "IDENTIFIER"     shift, and go to state 102
    "list function"  shift, and go to state 38

    variable   go to state 155
    read_item  go to state 246


State 215

  126 io_statement: "write" "(" write_list ")" •

    $default  reduce using rule 126 (io_statement)


State 216

  130 write_list: write_list "," • write_item

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38
    "string"         shift, and go to state 158

    expression         go to state 159
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42
    write_item         go to state 247


State 217

  124 subprogram_call: "IDENTIFIER" "(" expressions ")" •

    $default  reduce using rule 124 (subprogram_call)


State 218

   76 subprogram: sub_header ";" declarations subprograms comp_statement •

    $default  reduce using rule 76 (subprogram)


State 219

   50 limits: "IDENTIFIER" •
   55 limit: "IDENTIFIER" •

    ".."      reduce using rule 55 (limit)
    $default  reduce using rule 50 (limits)


State 220

   42 type_def: "array" "[" dims • "]" "of" typename
   47 dims: dims • "," limits

    ","  shift, and go to state 248
    "]"  shift, and go to state 249


State 221

   48 dims: limits •

    $default  reduce using rule 48 (dims)


State 222

   49 limits: limit • ".." limit

    ".."  shift, and go to state 250


State 223

   43 type_def: "list" "of" typename •

    $default  reduce using rule 43 (type_def)


State 224

   44 type_def: "set" "of" typename •

    $default  reduce using rule 44 (type_def)


State 225

   45 type_def: "record" fields "end" •

    $default  reduce using rule 45 (type_def)


State 226

   64 fields: fields ";" • field

    "IDENTIFIER"  shift, and go to state 72

    field        go to state 251
    identifiers  go to state 172


State 227

   66 field: identifiers ":" • typename

    "integer"     shift, and go to state 178
    "real"        shift, and go to state 179
    "boolean"     shift, and go to state 180
    "char"        shift, and go to state 181
    "IDENTIFIER"  shift, and go to state 182

    typename       go to state 252
    standard_type  go to state 184


State 228

   46 type_def: limit ".." limit •

    $default  reduce using rule 46 (type_def)


State 229

   40 type_defs: type_defs ";" "IDENTIFIER" "=" type_def •

    $default  reduce using rule 40 (type_defs)


State 230

   71 variable_defs: variable_defs ";" identifiers ":" • typename

    "integer"     shift, and go to state 178
    "real"        shift, and go to state 179
    "boolean"     shift, and go to state 180
    "char"        shift, and go to state 181
    "IDENTIFIER"  shift, and go to state 182

    typename       go to state 253
    standard_type  go to state 184


State 231

   83 parameter_list: parameter_list ";" pass • identifiers ":" typename

    "IDENTIFIER"  shift, and go to state 72

    identifiers  go to state 254


State 232

   84 parameter_list: pass identifiers ":" • typename

    "integer"     shift, and go to state 178
    "real"        shift, and go to state 179
    "boolean"     shift, and go to state 180
    "char"        shift, and go to state 181
    "IDENTIFIER"  shift, and go to state 182

    typename       go to state 255
    standard_type  go to state 184


State 233

   18 expression: "IDENTIFIER" "(" • expressions ")"
  124 subprogram_call: "IDENTIFIER" "(" • expressions ")"

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 81
    variable           go to state 40
    expressions        go to state 256
    constant           go to state 41
    setlistexpression  go to state 42


State 234

  104 if_tail: "else" • statement

    "begin"          shift, and go to state 19
    "if"             shift, and go to state 46
    "while"          shift, and go to state 47
    "case"           shift, and go to state 48
    "for"            shift, and go to state 49
    "with"           shift, and go to state 50
    "read"           shift, and go to state 51
    "write"          shift, and go to state 52
    "IDENTIFIER"     shift, and go to state 53
    "list function"  shift, and go to state 38

    $default  reduce using rule 99 (statement)

    variable         go to state 54
    comp_statement   go to state 55
    statement        go to state 257
    assignment       go to state 58
    if_statement     go to state 59
    case_statement   go to state 60
    while_statement  go to state 61
    for_statement    go to state 62
    with_statement   go to state 63
    subprogram_call  go to state 64
    io_statement     go to state 65


State 235

  103 if_statement: "if" expression error statement if_tail •

    $default  reduce using rule 103 (if_statement)


State 236

  102 if_statement: "if" expression "then" statement if_tail •

    $default  reduce using rule 102 (if_statement)


State 237

  114 label: sign "IDENTIFIER" •

    $default  reduce using rule 114 (label)


State 238

  113 label: sign constant •

    $default  reduce using rule 113 (label)


State 239

  107 cases: cases ";" • single_case
  115 case_tail: ";" • "otherwise" ":" statement

    "otherwise"  shift, and go to state 258
    "+ or -"     shift, and go to state 204

    "end"     reduce using rule 110 (single_case)
    ";"       reduce using rule 110 (single_case)
    $default  reduce using rule 57 (sign)

    sign         go to state 205
    single_case  go to state 259
    label_list   go to state 208
    label        go to state 209


State 240

  106 case_statement: "case" expression "of" cases case_tail • "end"

    "end"  shift, and go to state 260


State 241

  111 label_list: label_list "," • label

    "+ or -"  shift, and go to state 204

    $default  reduce using rule 57 (sign)

    sign   go to state 205
    label  go to state 261


State 242

  109 single_case: label_list ":" • statement

    "begin"          shift, and go to state 19
    "if"             shift, and go to state 46
    "while"          shift, and go to state 47
    "case"           shift, and go to state 48
    "for"            shift, and go to state 49
    "with"           shift, and go to state 50
    "read"           shift, and go to state 51
    "write"          shift, and go to state 52
    "IDENTIFIER"     shift, and go to state 53
    "list function"  shift, and go to state 38

    $default  reduce using rule 99 (statement)

    variable         go to state 54
    comp_statement   go to state 55
    statement        go to state 262
    assignment       go to state 58
    if_statement     go to state 59
    case_statement   go to state 60
    while_statement  go to state 61
    for_statement    go to state 62
    with_statement   go to state 63
    subprogram_call  go to state 64
    io_statement     go to state 65


State 243

  120 iter_space: expression "to" • expression

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 263
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 244

  121 iter_space: expression "downto" • expression

    "length"         shift, and go to state 27
    "new"            shift, and go to state 28
    "+ or -"         shift, and go to state 29
    "NOT"            shift, and go to state 30
    "("              shift, and go to state 31
    "["              shift, and go to state 32
    "IDENTIFIER"     shift, and go to state 33
    "ICONST"         shift, and go to state 34
    "RCONST"         shift, and go to state 35
    "BCONST"         shift, and go to state 36
    "CCONST"         shift, and go to state 37
    "list function"  shift, and go to state 38

    expression         go to state 264
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


State 245

  119 for_statement: "for" "IDENTIFIER" ":=" iter_space "do" • statement

    "begin"          shift, and go to state 19
    "if"             shift, and go to state 46
    "while"          shift, and go to state 47
    "case"           shift, and go to state 48
    "for"            shift, and go to state 49
    "with"           shift, and go to state 50
    "read"           shift, and go to state 51
    "write"          shift, and go to state 52
    "IDENTIFIER"     shift, and go to state 53
    "list function"  shift, and go to state 38

    $default  reduce using rule 99 (statement)

    variable         go to state 54
    comp_statement   go to state 55
    statement        go to state 265
    assignment       go to state 58
    if_statement     go to state 59
    case_statement   go to state 60
    while_statement  go to state 61
    for_statement    go to state 62
    with_statement   go to state 63
    subprogram_call  go to state 64
    io_statement     go to state 65


State 246

  127 read_list: read_list "," read_item •

    $default  reduce using rule 127 (read_list)


State 247

  130 write_list: write_list "," write_item •

    $default  reduce using rule 130 (write_list)


State 248

   47 dims: dims "," • limits

    "+ or -"      shift, and go to state 116
    "IDENTIFIER"  shift, and go to state 219
    "BCONST"      shift, and go to state 118
    "CCONST"      shift, and go to state 119

    $default  reduce using rule 57 (sign)

    limits  go to state 266
    limit   go to state 222
    sign    go to state 122


State 249

   42 type_def: "array" "[" dims "]" • "of" typename

    "of"  shift, and go to state 267


State 250

   49 limits: limit ".." • limit

    "+ or -"      shift, and go to state 116
    "IDENTIFIER"  shift, and go to state 117
    "BCONST"      shift, and go to state 118
    "CCONST"      shift, and go to state 119

    $default  reduce using rule 57 (sign)

    limit  go to state 268
    sign   go to state 122


State 251

   64 fields: fields ";" field •

    $default  reduce using rule 64 (fields)


State 252

   66 field: identifiers ":" typename •

    $default  reduce using rule 66 (field)


State 253

   71 variable_defs: variable_defs ";" identifiers ":" typename •

    $default  reduce using rule 71 (variable_defs)


State 254

   67 identifiers: identifiers • "," "IDENTIFIER"
   83 parameter_list: parameter_list ";" pass identifiers • ":" typename

    ","  shift, and go to state 124
    ":"  shift, and go to state 269


State 255

   84 parameter_list: pass identifiers ":" typename •

    $default  reduce using rule 84 (parameter_list)


State 256

   18 expression: "IDENTIFIER" "(" expressions • ")"
   29 expressions: expressions • "," expression
  124 subprogram_call: "IDENTIFIER" "(" expressions • ")"

    ")"  shift, and go to state 270
    ","  shift, and go to state 130


State 257

  104 if_tail: "else" statement •

    $default  reduce using rule 104 (if_tail)


State 258

  115 case_tail: ";" "otherwise" • ":" statement

    ":"  shift, and go to state 271


State 259

  107 cases: cases ";" single_case •

    $default  reduce using rule 107 (cases)


State 260

  106 case_statement: "case" expression "of" cases case_tail "end" •

    $default  reduce using rule 106 (case_statement)


State 261

  111 label_list: label_list "," label •

    $default  reduce using rule 111 (label_list)


State 262

  109 single_case: label_list ":" statement •

    $default  reduce using rule 109 (single_case)


State 263

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression
  120 iter_space: expression "to" expression •

    error                          shift, and go to state 85
    "> or >= or < or <= or <>"     shift, and go to state 86
    "+ or -"                       shift, and go to state 87
    "||"                           shift, and go to state 88
    "* or / or DIV or MOD or AND"  shift, and go to state 89
    "IN"                           shift, and go to state 90
    "="                            shift, and go to state 91

    "do"  reduce using rule 120 (iter_space)


State 264

    8 expression: expression • "> or >= or < or <= or <>" expression
    9           | expression • "=" expression
   10           | expression • "IN" expression
   11           | expression • "||" expression
   12           | expression • "+ or -" expression
   13           | expression • "* or / or DIV or MOD or AND" expression
   14           | expression • error expression
  121 iter_space: expression "downto" expression •

    error                          shift, and go to state 85
    "> or >= or < or <= or <>"     shift, and go to state 86
    "+ or -"                       shift, and go to state 87
    "||"                           shift, and go to state 88
    "* or / or DIV or MOD or AND"  shift, and go to state 89
    "IN"                           shift, and go to state 90
    "="                            shift, and go to state 91

    "do"  reduce using rule 121 (iter_space)


State 265

  119 for_statement: "for" "IDENTIFIER" ":=" iter_space "do" statement •

    $default  reduce using rule 119 (for_statement)


State 266

   47 dims: dims "," limits •

    $default  reduce using rule 47 (dims)


State 267

   42 type_def: "array" "[" dims "]" "of" • typename

    "integer"     shift, and go to state 178
    "real"        shift, and go to state 179
    "boolean"     shift, and go to state 180
    "char"        shift, and go to state 181
    "IDENTIFIER"  shift, and go to state 182

    typename       go to state 272
    standard_type  go to state 184


State 268

   49 limits: limit ".." limit •

    $default  reduce using rule 49 (limits)


State 269

   83 parameter_list: parameter_list ";" pass identifiers ":" • typename

    "integer"     shift, and go to state 178
    "real"        shift, and go to state 179
    "boolean"     shift, and go to state 180
    "char"        shift, and go to state 181
    "IDENTIFIER"  shift, and go to state 182

    typename       go to state 273
    standard_type  go to state 184


State 270

   18 expression: "IDENTIFIER" "(" expressions ")" •
  124 subprogram_call: "IDENTIFIER" "(" expressions ")" •

    "end"     reduce using rule 124 (subprogram_call)
    "else"    reduce using rule 124 (subprogram_call)
    ";"       reduce using rule 124 (subprogram_call)
    $default  reduce using rule 18 (expression)


State 271

  115 case_tail: ";" "otherwise" ":" • statement

    "begin"          shift, and go to state 19
    "if"             shift, and go to state 46
    "while"          shift, and go to state 47
    "case"           shift, and go to state 48
    "for"            shift, and go to state 49
    "with"           shift, and go to state 50
    "read"           shift, and go to state 51
    "write"          shift, and go to state 52
    "IDENTIFIER"     shift, and go to state 53
    "list function"  shift, and go to state 38

    $default  reduce using rule 99 (statement)

    variable         go to state 54
    comp_statement   go to state 55
    statement        go to state 274
    assignment       go to state 58
    if_statement     go to state 59
    case_statement   go to state 60
    while_statement  go to state 61
    for_statement    go to state 62
    with_statement   go to state 63
    subprogram_call  go to state 64
    io_statement     go to state 65


State 272

   42 type_def: "array" "[" dims "]" "of" typename •

    $default  reduce using rule 42 (type_def)


State 273

   83 parameter_list: parameter_list ";" pass identifiers ":" typename •

    $default  reduce using rule 83 (parameter_list)


State 274

  115 case_tail: ";" "otherwise" ":" statement •

    $default  reduce using rule 115 (case_tail)
